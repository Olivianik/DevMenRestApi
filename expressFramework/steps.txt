Introduction to Node.js 11
--------------------------
npm init -y
npm i express
npm i --save-dev nodemon
remove test script and add dev script "test": "echo \"Error: no test specified\" && exit 1" -> "devStart": "nodemon server.js"
create server.js
add gitignore node modules env
=========================> add commit project setup push
-server.js
pull express library
set up app variabel
add port 3000
=========================> add commit server setup push
-server.js
create app get and add 2 params
send response
=========================> add commit basic routing push
-server.js
testing sending data
=========================> add commit sending data push
-server.js
add res render index at / get route
by default all of view files are going to live inside of the folder called views
create views folder
create index
you can pass data to views
add views engine
npm i ejs
add app set view engine ejs
rename to index ejs
add second params to render index which is an object
add date
pass date to view
-views/index.ejs
output date
set how to view local which not defined
=========================> add commit rendering html push
-server.js
create get users route
create get users new route
create folder routes
copy users route
-routes/users.js
pull express library
create route variabel
replace app with router
remove /users route
module exports users route
-server.js
pull users route library
use users route library with parent /users
=========================> add commit routers push
-routes/users.js
create post / route
create get users by id route
with dynamic params :id and access with req.params.id
=========================> add commit advanced routing push
put the dynamic params route at the very bottom because it can replace other route as id
-routes/users.js
create put users by id with dynamic params
create delete users by id with dynamic params
create chain routing get put delete users by id with dynamic params (router.route)
test router.param middleware, that will executed before it reach the router.route
test middlewaware on get users by id route
=========================> add commit advanced routing 2 push
-server.js
create middleware function to logger
app use middleware function
middleware run from top to the bottom
always define it at the top of the page if you want to run middleware everywhere
but you can use it individualy if you didnt want to define it
you can run 3 or more middleware on same route
=========================> add commit middleware 1 push
-server.js
remove logger middleware from get / route
remove middleware function
-routes/users.js
move middleware from server js
use it with router.use
=========================> add commit middleware 2 push
-views/index.ejs
remove dynamic variabel
-server.js
remove parsing dynamic variabel to index.ejs
create public folder
-views/index.ejs
rename index.html
move to public folder
-server.js
declare usage of public folder
create public/css folder
create test.html
-public/css/test.html
put some dummy text
this public folder is to access assets css js etc
=========================> add commit rendering static files push
-routes/user.js
create render to get new users from
create folder and file users on views
-views/users/new.ejs
copy paste precode with local variabel for dynamic data
-routes/user.js
add users data dynamic param
passing it to post route user
-server.js
express didnt allow to access firstName body by default so we need to use middleware called app.use(express.urlencoded())
=========================> add commit parsing from/json data 1 push
-routes/user.js
create var on post route firstName to validate
simulate if else dummy
remove local variabel on get users form
-server.js
allow server to pass json express.json
=========================> add commit parsing from/json data 2 push
-routes/user.js
add console.log(req.query.name) on router get /
=========================> add commit parse query params push